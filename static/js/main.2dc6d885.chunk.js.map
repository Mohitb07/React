{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+LAGMA,G,MAAe,CACjBC,OAAS,CACLC,KAAK,uBACLC,SAAS,OAEbC,OAAS,CACLF,KAAK,iBACLC,SAAS,eAyBFE,EAbO,SAACC,GACnB,IATaC,EAAKC,EASZC,GATOF,EASYD,EAAMC,KATbC,GASkB,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAS,SAEnBA,EAAM,EAAI,SAAS,UAIF,EAEDP,EAAaS,GAAhCP,EAFoB,EAEpBA,KAAMC,EAFc,EAEdA,SAEd,OACA,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aC5BdU,EAAU,SAACP,GACb,OACI,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBACVN,EAAMQ,WAMvBD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCXTG,E,4MAEFC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,kEAGf,IAAD,OACfC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAG,EAAKC,SAAS,CAACjB,IAAIgB,EAASE,OAAOC,cAC9C,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,aAAaS,EAAIb,e,sCAK3C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAChC,wCAAcqB,KAAKX,MAAMC,aAAzB,MAGNU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IACpC,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAG/B,kBAAC,EAAD,CAASO,QAAQ,qC,+BAIxB,OAAO,yBAAKF,UAAU,cACjBgB,KAAKC,qB,GA1BAC,IAAMC,WA+BxBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,cAAc,W","file":"static/js/main.2dc6d885.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n    summer : {\r\n        text:'Lets\\'s hit the beach',\r\n        iconName:'sun'\r\n    },\r\n    winter : {\r\n        text:'Burr it\\'s cold',\r\n        iconName:'snowflake'\r\n    }\r\n}\r\n\r\nconst getSeason=(lat, month) =>{\r\n    if (month > 2 && month < 9){\r\n        return lat > 0 ? 'summer':'winter';\r\n    }else{\r\n        return lat > 0 ? 'winter':'summer';\r\n    }\r\n}\r\n\r\nconst SeasonDisplay = (props) =>{\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const { text, iconName } = seasonConfig[season]\r\n\r\n    return (\r\n    <div className={`season-display ${season}`}>\r\n        <i className={`icon-left massive ${iconName} icon`}/>\r\n        <h1>{text}</h1>\r\n        <i className={`icon-right massive ${iconName} icon`}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) =>{\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = { lat: null, errorMessage: '' }\r\n    \r\n    // Data loading\r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position =>this.setState({lat:position.coords.latitude}),\r\n            err => this.setState({errorMessage:err.message})\r\n            );\r\n    }\r\n\r\n    renderContent(){\r\n        if (this.state.errorMessage && !this.state.lat){\r\n            return <div>Error : {this.state.errorMessage} </div>\r\n        }\r\n    \r\n        if (!this.state.errorMessage && this.state.lat){\r\n        return <SeasonDisplay lat={this.state.lat}/>\r\n        }\r\n    \r\n        return <Spinner message=\"Please accept location request\"/>;\r\n    }\r\n\r\n    render () {\r\n        return <div className=\"border red\">\r\n            {this.renderContent()}\r\n        </div>\r\n    }\r\n}\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'))"],"sourceRoot":""}